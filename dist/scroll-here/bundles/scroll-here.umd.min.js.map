{"version":3,"sources":["ng://scroll-here/lib/scroll-here.component.ts","ng://scroll-here/lib/scroll-here.module.ts"],"names":["ScrollHereComponent","el","this","offset","isScrolled","prototype","ngAfterViewChecked","nativeElement","isConnected","scrollableParent","parentElement","overflowRegex","HTMLElement","overflowValues","window","getComputedStyle","overflow","overflowY","scrollHeight","clientHeight","test","scrollIntoView","behavior","block","inline","parentTop","getBoundingClientRect","top","childTop","childParentOffset","Math","abs","scrollTop","offsetHeight","parseInt","Component","args","selector","template","ElementRef","Input","ScrollHereModule","NgModule","declarations","imports","exports"],"mappings":"+QAAA,IAAAA,EAAA,WAoBE,SAAAA,EAAoBC,GAAAC,KAAAD,GAAAA,EAJXC,KAAAC,OAAiB,EAElBD,KAAAE,YAAa,EA2CvB,OAvCEJ,EAAAK,UAAAC,mBAAA,WACE,GAAKJ,KAAKD,GAAGM,cAAcC,aAGpB,IAAuB,IAApBN,KAAKE,WAAsB,KAE/BK,EAAgCP,KAAKO,iBACzC,IAAIA,EAAkB,CACpBA,EAAmBP,KAAKD,GAAGM,cAAcG,cAGzC,QAFMC,EAAgB,uBAEhBF,GAAoBA,aAA4BG,aAAa,KAC7DC,EACFC,OAAOC,iBAAiBN,GAAkBO,SAC1CF,OAAOC,iBAAiBN,GAAkBQ,UAE5C,GAAGR,EAAiBS,aAAeT,EAAiBU,cAClDR,EAAcS,KAAKP,GACnB,MAEFJ,EAAmBA,EAAiBC,cAGtC,KAAID,GAAsBA,aAA4BG,aAGpD,YADAV,KAAKD,GAAGM,cAAcc,eAAe,CAACC,SAAU,SAAUC,MAAO,SAAUC,OAAQ,WAIvF,GAAGf,GAAoBA,EAAiBS,aAAeT,EAAiBU,aAAc,KAChFM,EAAYhB,EAAiBiB,wBAAwBC,IACrDC,EAAW1B,KAAKD,GAAGM,cAAcmB,wBAAwBC,IACzDE,EAAoBC,KAAKC,IAAIN,EAAYG,GAC7CnB,EAAiBuB,UAAYH,EAAoBC,KAAKC,IAAItB,EAAiBwB,aAAe,GAAKC,SAAShC,KAAKC,OAAO,IACpHD,KAAKE,YAAa,SAhCpBF,KAAKE,YAAa,uBAtBvB+B,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,iBACVC,SAAU,yEAJQC,EAAAA,wDAWjBC,EAAAA,sBAKAA,EAAAA,SA6CHxC,EA7DA,GCAA,IAAAyC,EAAA,WAKA,SAAAA,KAMgC,2BAN/BC,EAAAA,SAAQN,KAAA,CAAC,CACRO,aAAc,CAAC3C,GACf4C,QAAS,GAETC,QAAS,CAAC7C,OAEoByC,EAXhC","sourcesContent":["import { Component, ElementRef, AfterViewChecked, Input } from '@angular/core';\n\n@Component({\n  selector: 'ar-scroll-here',\n  template: '<ng-content></ng-content>',\n})\nexport class ScrollHereComponent implements AfterViewChecked {\n\n  /**\n   * Determine which parent should scrolle, if not given it will be detected automatically\n   */\n  @Input() scrollableParent: HTMLElement;\n  \n  /**\n   * offset the scroll after scrolling into the middle of the container view, default is 0\n   */\n  @Input() offset: number = 0;\n\n  private isScrolled = false;\n\n  constructor(private el: ElementRef) { }\n\n  ngAfterViewChecked(): void {\n    if (!this.el.nativeElement.isConnected){\n      this.isScrolled = false;\n    \n    } else if(this.isScrolled === false) {\n\n      let scrollableParent: HTMLElement = this.scrollableParent;\n      if(!scrollableParent) {\n        scrollableParent = this.el.nativeElement.parentElement;\n        const overflowRegex = /(auto|scroll|hidden)/;\n        \n        while(scrollableParent && scrollableParent instanceof HTMLElement) {\n          let overflowValues =  \n            window.getComputedStyle(scrollableParent).overflow + \n            window.getComputedStyle(scrollableParent).overflowY //+ \n            // window.getComputedStyle(scrollableParent).overflowX;\n          if(scrollableParent.scrollHeight > scrollableParent.clientHeight &&\n            overflowRegex.test(overflowValues)) {\n            break;\n          }\n          scrollableParent = scrollableParent.parentElement\n        }\n\n        if(!scrollableParent || !(scrollableParent instanceof HTMLElement)) {\n          // Could not find a scrollable parent so leave it to the browser\n          this.el.nativeElement.scrollIntoView({behavior: \"smooth\", block: \"center\", inline: \"center\"});\n          return;\n        }\n      }\n      if(scrollableParent && scrollableParent.scrollHeight > scrollableParent.clientHeight) {\n        var parentTop = scrollableParent.getBoundingClientRect().top; \n        var childTop = this.el.nativeElement.getBoundingClientRect().top; \n        var childParentOffset = Math.abs(parentTop - childTop)\n        scrollableParent.scrollTop = childParentOffset - Math.abs(scrollableParent.offsetHeight / 2) + parseInt(this.offset+'');\n        this.isScrolled = true;\n      }\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ScrollHereComponent } from './scroll-here.component';\n\n\n\n@NgModule({\n  declarations: [ScrollHereComponent],\n  imports: [\n  ],\n  exports: [ScrollHereComponent]\n})\nexport class ScrollHereModule { }\n"]}